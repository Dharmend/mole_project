<?php
/**
 * Implements hook_permission().
 */
function card_register_permission(){
  return array(
    'access card-register content' => array(
      'title' => t('Access content for the card Registration module'),
    ),
    'access card-accept content' => array(
      'title' => t('Access content for the card Accept module'),
    ),
    'access permission to approve IA content' => array(
      'title' => t('Access Permission to update IA CARD card Accept module'),
    ),
    'access permission to List IA content' => array(
      'title' => t('Access Permission to LIST IA CARD card'),
    ),
    'import card creation data' => array(
      'title' => t('import card creation data'),
    ),
    
  );
}

/**
 * Implements hook_help().
 */
function card_register_help($path, $arg) {
  switch ($path) {
    case 'admin/help#card-register':
      $output = '<p>' . t('"Card Register" is an acronym for "Completely Automated Public Turing test to tell Computers and Humans Apart". It is typically a challenge-response test to determine whether the user is human. The CAPTCHA module is a tool to fight automated submission by malicious users (spamming) of for example comments forms, user registration forms, guestbook forms, etc. You can extend the desired forms with an additional challenge, which should be easy for a human to solve correctly, but hard enough to keep automated scripts and spam bots out.') . '</p>';
      $output .= '<p>' . t('Note that the CAPTCHA module interacts with page caching (see <a href="!performancesettings">performance settings</a>). Because the challenge should be unique for each generated form, the caching of the page it appears on is prevented. Make sure that these forms do not appear on too many pages or you will lose much caching efficiency. For example, if you put a CAPTCHA on the user login block, which typically appears on each page for anonymous visitors, caching will practically be disabled. The comment submission forms are another example. In this case you should set the <em>Location of comment submission form</em> to <em>Display on separate page</em> in the comment settings of the relevant <a href="!contenttypes">content types</a> for better caching efficiency.',
        array(
          '!performancesettings' => url('admin/config/development/performance'),
          '!contenttypes' => url('admin/structure/types'),
        )
      ) . '</p>';
      $output .= '<p>' . t('Card Register is a trademark of Carnegie Mellon University.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_menu().
 */
 function card_register_menu(){
    $items = array();
    $items['card-register/add'] = array(
        'title' => 'Card Registration',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('card_register_add'),
        'access arguments' => array('access card-register content'),
      //  'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items['card-register/data'] = array(
        'title' => 'Download List of IA Card to be Generated',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('card_register_list'),
        //'page arguments' => array('card_register_list'),
        'access arguments' => array('access card-accept content'),
       // 'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items['card-register/edit/%'] = array( 
        'title' => 'Card Registration Edit',
        'page callback' => 'drupal_get_form', 
        'page arguments' => array('card_register_add'), 
        'access callback' => TRUE
      );
    $items['card-register/delete/%'] = array( 
        'title' => 'Card Registration Delete',
        'description' => 'For deleting card Registration node',
        'page callback' => 'drupal_get_form', 
        'page arguments' => array('card_register_delete'), 
        'access callback' => TRUE
      );


    $items['card-register/approve'] = array( 
        'title' => 'View New Request Received - Cardwise',
        'description' => 'For Approve',
        'page callback' => 'drupal_get_form', 
        'page arguments' => array('card_register_approve'), 
       'access arguments' => array('access permission to approve IA content'),

       // 'access callback' => TRUE
      );
    $items['card-register/approve-list'] = array( 
        'title' => 'List of Approved Request - Cardwise',
        'description' => 'For Approve',
        'page callback' => 'drupal_get_form', 
        'page arguments' => array('card_register_approve_list'), 
       'access arguments' => array('access permission to List IA content'),

       // 'access callback' => TRUE
      );


    $items['download-card-register'] = array( 
        'title' => 'Download Data',
        'page callback' => 'downlaod_card', 
        'file'  => 'card_register.inc',
        'access callback' => TRUE

      );

    $items['card_created_record'] = array(
       'title' => 'Import Card creation data',
        'description' => 'Import content from a <abbr title="Comma Separated Values">CSV</abbr> file.',
        'access callback' => 'user_access',
        'access arguments' => array('import card creation data'),
        'page callback' => 'card_created_record_pagecallback',
        'type' => MENU_NORMAL_ITEM,
      );


    $items['card-record-list'] = array(
       'title' => 'Card Record List',      
        'access callback' => 'user_access',
        'access arguments' => array('import card creation data'),
        'page callback' => 'card_record_list_pagecallback',
        'type' => MENU_NORMAL_ITEM,

      );
    return $items;
 }
 
function card_register_add($form, &$form_state){

      global $user;
      $role = end($user->roles);
      $user_info = user_load($user->uid);
      //echo "<pre>";
      $state_id =  $user_info->field_state['und'][0]['value'];

   
     $name = $user_info->field_name['und'][0]['value'];
     $designation = $user_info->field_designation['und'][0]['value'];
     $off_add1 = $user_info->field_office_address_1['und'][0]['value'];
     $off_add2 = $user_info->field_office_address_2['und'][0]['value'];
	 
	$form['authority-group-div-start']=array(
		'#prefix' => '<div class="authority-group">',
		);

     $form['authority_card_holder']=array(
        '#type' =>'textfield',
        '#title' =>t('Authority card holder'),
        '#required' => TRUE,
        '#size' =>60,
        //'#default_value' =>$name,
        '#attributes' =>array( 'id' => "authority_card_holder",
                             // 'readonly' => 'readonly'
                               ),
        );
    $form['designation']=array(
      '#type' =>'textfield',
        '#title' =>t('Designation'),
        '#required' => TRUE,
        '#size' =>60,
        //'#default_value' =>$designation,
        '#attributes' =>array( 'id' => "authority_card_holder",
                             // 'readonly' => 'readonly'
                               ),
        );

    $form['official_address1']=array(
		'#prefix' => '<div class="official-add">',
        '#type' =>'textfield',
        '#title' =>t('Official Address'),
        '#required' => TRUE,
        '#size' =>60,
        //'#default_value' =>$off_add1,
        '#attributes' =>array( 'id' => "official_address1",
                              // 'readonly' => 'readonly'
                               ),
        );
	
    $form['official_address2']=array(
        '#type' =>'textfield',
        //'#title' =>t('Official Address'),
        '#size' =>60,
        //'#default_value' =>$off_add2,
        //'#attributes' =>array( 'id' => "official_address2",
          //                     'readonly' => 'readonly'
            //    ),
        '#suffix' => '</div>',
        );

	$form['authority-group-div-end']=array(
		'#prefix' => '</div>',
		);
    
    if(($role == 'State')){
            $state_value = $user_info->field_state['und'][0]['value'];
            $state_list_data = _get_location('state');
            $state_list[$state_value] = $state_list_data[$state_value];
        $state_selected = isset($form_state['values']['state']) ? $form_state['values']['state'] : $state_value;

          }
          else{
          $state_list = _get_location('state');
          $state_selected = isset($form_state['values']['state']) ? $form_state['values']['state'] : key($state_list);
  } 

    $form['state'] = array(
	    '#prefix' => '<div class="add-group">',
        '#title' => 'State',
        '#type' => 'select',
        '#options' => $state_list,
        '#default_value' => $state_selected,
        '#required' => TRUE,
        '#ajax' => array(
            'callback' => 'ajax_callback_state',
            'wrapper' => 'wrapper_state',
            
        ),
        
    );


   $district_list = _get_location('district',$state_selected);
    $district_selected = isset($form_state['values']['district']) ? $form_state['values']['district'] : key($district_list);
    $form['district'] = array(
        '#title' => 'District',
        '#type' => 'select',
        '#options' => $district_list,
        '#default_value' => $district_selected,
        '#required' => TRUE,
         '#multiple' => TRUE,
         '#size' => 10,
        '#prefix' => '<div id="wrapper_state">',
        '#suffix' => '</div>',
       
        
    );

        $form['pin_code']=array(
        '#type' =>'textfield',
        '#title' =>t('pincode'),
        '#required' => TRUE,
        '#size' =>30,
        '#default_value' =>'',
          );

  $card_request = db_query("SELECT tid, name FROM {taxonomy_term_data} WHERE vid = 2")->fetchAllKeyed();

    $form['type_card_request']=array(
        '#type' =>'select',
        '#title' =>t('Type of Card Requested'),
        '#options'=>$card_request,
        '#required' => TRUE,
        '#default_value' =>'',
		'#suffix' => '</div>'
        );

      $form['letter_date'] = array(
      '#type' => 'date_popup',
      '#title' => t("Letter Date"),
      '#description' => t('Please select Letter date'),
      '#date_format' => 'd-m-Y',
              '#required' => TRUE,
      '#attributes' => array('autocomplete' =>'off','readonly' => 'readonly'),
      '#default_value' => '',
      
     );


         $form['letter_no']=array(
        '#type' =>'textfield',
        '#title' =>t('Letter No'),
        '#size' =>30,
        '#required' => TRUE,
        '#default_value' =>'',
        
        );
         $form['department_organisation_name']=array(
        '#type' =>'textfield',
        '#title' =>t('Department organisation Name'),
        '#required' => TRUE,
        '#size' =>30,
        '#default_value' =>'',
        
        );

       $form['organisation_unit_no']=array(
        '#type' =>'textfield',
        '#title' =>t('Organisation Unit No'),
        '#required' => TRUE,
        '#size' =>30,
        '#default_value' =>'',
        );

        $form['aadhaar_no']=array(
        '#type' =>'textfield',
        '#title' =>t('AAdhaar No (Authority card holder)'),
        '#size' =>30,
        '#default_value' =>'',
        );
        
    $form['submit']=array(
      '#type'=>'submit',
      '#value'=>'Submit',
    );
   // return $form;
 $form['card_register_List']=array(
      '#type' => 'markup',
      '#markup' =>t('<h2 style="clear: both;">List Of Authority Card</h2>'),      
       );
    
 $header = array('S.N','Date','State','Requested District','Requester Name','Designation', 'Address', 'Letter No.','Department Organisation Name','Card Requested', 'Status');
 $query = db_select('card_register', 'cr');
 $query->fields('cr');
// $query->condition('approved', '1', '=');
 $query = $query->extend('TableSort')->extend('PagerDefault')->limit(20);
 $result = $query->execute();
 
 $rows = array();
    $i = 1;

                while($data = $result->fetchAssoc()){
                 // echo "<pre>";
                 // print_r($data);
                 if($data['approved']==1){
                  $status = 'Approved';
                 }else{
                  $status = ' Pending';
                 }
                   //$date =  date_format(date_create($data['date_card_creation']),"d/m/Y");
                 $date = format_date($data['date_card_creation'],'medium',"d/m/Y");
                 
                  $district = $data['district'];

                  $dist = explode(',', $district);
                $dist_list = _get_location('district',$data['state']);

            $dstr = array();
 foreach ($dist as $key => $value) {
 $dstr[] = $dist_list[$value];
  }
  $district_value = implode(',', $dstr);

                    $state_list = _get_location('state');
                    
                     $term = taxonomy_term_load($data['type_card_request']);
                    $cardname = $term->name;

               $State = $state_list[$data['state']];
                  // Fill the table rows
                    $rows[$data['id']] = array(
                    $i,
                    $date,
                    $State,
                    $district_value,         
                    $data['authority_card_holder'],
                    $data['designation'],
                    $data['official_address1'].', '.$data['official_address2'],
                    $data ['letter_no'],
                    $data['department_organisation_name'],
                    $cardname,
                    $status,
                  //  $data['no_of_card_request'],
                 //   $data['approved'],    
                   
                );
                  $i++;
              

            $form['table'] = array(
                            '#theme' => 'table',
                            '#header' => $header,
                            '#rows' => $rows,
                            '#empty' => t('Table has no row!'),
                            
                          );

             

          
            foreach( $rows as $key => $value )
                {
                  if($value['6']=='1'){
                $form['approve_select'][$key]['#disabled'] = true;
                     }
                }
 

 
 $form['pager'] = array('#markup' => theme('pager'));      
}

return $form;


 }
 
function card_register_add_submit($form, &$form_state){
 
  $districtvalue = implode(',', $form_state['values']['district']);

    $register_name = $form_state['values']['authority_card_holder'];
    $designation = $form_state['values']['designation'];
    $off_add1 = $form_state['values']['official_address1'];
    $off_add2 = $form_state['values']['official_address2'];
    $state = $form_state['values']['state'];
    //$district =  $form_state['values']['district'];
    $district =  $districtvalue;
    $pincode =  $form_state['values']['pin_code'];
    $type_of_card = $form_state['values']['type_card_request'];
    $letter_date = $form_state['values']['letter_date'];
    $letter_no = $form_state['values']['letter_no'];
    $department_organisation_name = $form_state['values']['department_organisation_name'];
    $organisation_unit_no = $form_state['values']['organisation_unit_no'];
    $aadhaar_no = $form_state['values']['aadhaar_no'];
    $date =  strtotime(date("d-m-Y"));

    
 //echo  $timestamp = strtotime('22-09-2008');

   $options = array(
                   'authority_card_holder' => $register_name,
                   'designation' => $designation,
                   'official_address1' => $off_add1,
                   'official_address2' => $off_add2,
                   'state' => $state,
                   'district' => $district,
                   'pin_code' => $pincode,
                   'type_card_request' => $type_of_card,
                   'letter_date'=> $letter_date,
                   'letter_no' => $letter_no,
                   'department_organisation_name' => $department_organisation_name,
                   'organisation_unit_no' => $organisation_unit_no,
                   'aadhaar_no' => $aadhaar_no,
                   'card_create_date' => $date,
                   'created' => REQUEST_TIME,
                   );


 $query=db_insert('card_register')
                  ->fields($options)
                  ->execute();
 
          if($query){
            drupal_set_message('Your Authority card Request has been send to Mole.');
          }

}

function card_register_add_validate($form, &$form_state){
  // echo "<pre>";
  // print_r($form_state['values']);
  // die('ss');
  $authority_name = $form_state['values']['authority_card_holder'];
  $aadhar =  $form_state['values']['aadhaar_no'];
  $pin =   $form_state['values']['pin_code'];
  $designation =  $form_state['values']['designation'];
  $official_address1 =  $form_state['values']['official_address1'];
  $official_address2 =  $form_state['values']['official_address2'];


  $state_name = $form_state['values']['state'];
  $districtsval =   array_values($form_state['values']['district']);
  $query = db_select('card_register', 'cr');
  $query->fields('cr');
  $result = $query->execute();
  $matchresult = array();
  while ($data = $result->fetchAssoc()) {
        $c_state = $data['state'];
        $c_district = explode(',', $data['district']);
        if($c_state == $state_name){          
            $matchresult[] = array_intersect($districtsval,$c_district);
        }
     
  }
        $combine_array = array();
        foreach ($matchresult as  $mavalue) {
           $combine_array =  array_merge($combine_array, $mavalue);
        }
if(!empty($combine_array)){
          $district_list = _get_location('district',$state_name);
          $dis_val = array();
          foreach ($combine_array as $key => $combine_arrayva) {
           $dis_val[] =  $district_list[$combine_arrayva];
          }
         $already_ass_dis =  implode(',', $dis_val);

  form_set_error('',t($already_ass_dis.' The selected district is already assigned for IA Card'));
}
custom_valdiation_aadhaar($aadhaar);
 custom_valdiation_name($authority_name, 'Authority card holder');
  custom_valdiation_name($designation, 'designation');


 custom_valdiation_pincode($pin);
 custom_valdiation_address($official_address1);
  custom_valdiation_address($official_address2);

}

function card_register_list($form, &$form_state){

 $form['date_from'] = array(
  '#type' => 'date_popup',
  '#title' => t("Date From"),
  '#description' => t('Please select Date From'),
  '#required' => TRUE,
  '#date_format' => 'd/m/Y',
  '#attributes' => array('autocomplete' =>'off','readonly' => 'readonly'),
  '#default_value' => $_SESSION['date_from'] ,
   '#prefix' => '<div id="date_from">',
        '#suffix' => '</div>',
 );

 $form['date_to'] = array(
  '#type' => 'date_popup',
  '#title' => t("Date To"),
  '#description' => t('Please select Date to'),
  '#required' => TRUE,
  '#date_format' => 'd/m/Y',
  '#attributes' => array('autocomplete' =>'off','readonly' => 'readonly'),
  '#default_value' => $_SESSION['date_to'],
   '#prefix' => '<div id="date_to">',
        '#suffix' => '</div>',
 );
$form['submit']=array(
      '#type'=>'submit',
      '#value'=>'Submit',
    );

$form['reset'] = array(
    '#type' => 'submit',
    '#submit' => array('card_reset'),
    '#value' => t('Reset'),
  );
if((!empty($_SESSION['date_from'])) && (!empty($_SESSION['date_to']))){
$p = 'download-card-register';
   $form['download'] = array(
       '#type' => 'markup',
       '#markup' => l('Download',$p),
   );
}
//if(!empty($_SESSION['date_from'])){
 $start_date = strtotime($_SESSION['date_from'] );
 $end_date =  strtotime($_SESSION['date_to']);
  

 
 $header = array('S.N','State','District','Authority Name','Requester Department' ,'Department Address', 'Letter No.','Card Type','Request Date','Approval Date');
 $query = db_select('card_register', 'cr');
 $query->fields('cr');
 $query->condition('approved', '1');
 if(!empty($_SESSION['date_from'])){
    $query->condition('card_create_date', array($start_date, $end_date), 'BETWEEN');
 }
 $query = $query->extend('TableSort')->extend('PagerDefault')->limit(20);
 $result = $query->execute();

 
 
 $rows = array();
    $i = 1;

                while($data = $result->fetchAssoc()){
                  $district = $data['district'];
                  $dist = explode(',', $district);
                  $dist_list = _get_location('district',$data['state']);

            $dstr = array();
                foreach ($dist as $key => $value) {
                        $dstr[] = $dist_list[$value];
                 }
            $district_value = implode(',', $dstr);
                    $state_list = _get_location('state');
                    
                     $term = taxonomy_term_load($data['type_card_request']);
                    $cardname = $term->name;

               $State = $state_list[$data['state']];
                  // Fill the table rows
                    $rows[$data['id']] = array(
                    $i,
                    $State,
                    $district_value,      
                    $data['authority_card_holder'],
                    $data['department_organisation_name'],
                    $data['official_address1'].', '.$data['official_address2'],
                    $data ['letter_no'],
                    $cardname,
                    format_date($data ['created'], $type = 'medium', 'd-m-Y'),
                    format_date($data ['card_create_date'], $type = 'medium', 'd-m-Y'),
                    
                );
                  $i++;
              }

               $form['table'] = array(
                            '#theme' => 'table',
                            '#header' => $header,
                            '#rows' => $rows,
                            '#empty' => t('Table has no row!'),
                            
                          );
            foreach( $rows as $key => $value )
                {
                  if($value['6']=='1'){
                $form['approve_select'][$key]['#disabled'] = true;
                     }
                }
 

 
 $form['pager'] = array('#markup' => theme('pager'));      
//}

return $form;

}


function card_register_list_submit($form, &$form_state){
  
 
    if($form_state['values']['date_from'] != ''){
           $_SESSION['date_from'] =  $form_state['values']['date_from'];

       }
       if ($form_state['values']['date_to'] != '') {
            $_SESSION['date_to'] =  $form_state['values']['date_to'];
           
       }
      

}
function card_register_approve_list($form, &$form_state){


 $header = array('S.N','Card Request Date','Card Approval Date','State','Requested District','Requester Name', 'Address', 'Letter No.','Card Requested');
 $query = db_select('card_register', 'cr');
 $query->fields('cr');
 $query->condition('approved', '1', '=');
 $query = $query->extend('TableSort')->extend('PagerDefault')->limit(20);
 $result = $query->execute();
 
 $rows = array();
    $i = 1;

                while($data = $result->fetchAssoc()){
     
                    $date =  format_date($data['card_create_date'],'medium',"d/m/Y");
                    $district = $data['district'];
                    $dist = explode(',', $district);
                    $dist_list = _get_location('district',$data['state']);

                    $dstr = array();
                    foreach ($dist as $key => $value) {
                    $dstr[] = $dist_list[$value];
                     }
                    $district_value = implode(',', $dstr);

                    $state_list = _get_location('state');
                    
                    $term = taxonomy_term_load($data['type_card_request']);
                    $cardname = $term->name;

               $State = $state_list[$data['state']];
                  // Fill the table rows
                    $rows[$data['id']] = array(
                    $i,
                    format_date($data['created'],'custom','d/m/Y'),
                    $date,    
                    $State,
                    $district_value,         
                    $data['authority_card_holder'],
                    $data['official_address1'].', '.$data['official_address2'],
                    $data ['letter_no'],
                    $cardname,
                  //  $data['no_of_card_request'],
                 //   $data['approved'],    
                   
                );
                  $i++;
              

            $form['table'] = array(
                            '#theme' => 'table',
                            '#header' => $header,
                            '#rows' => $rows,
                            '#empty' => t('Table has no row!'),
                            
                          );

             

          
            foreach( $rows as $key => $value )
                {
                  if($value['6']=='1'){
                $form['approve_select'][$key]['#disabled'] = true;
                     }
                }
 

 
 $form['pager'] = array('#markup' => theme('pager'));      
}

return $form;





}

function card_register_approve($form, &$form_state){

 $header = array('S.N','State','District','Authority Name','Requester Departmnet', ' Department Address', 'Letter No.','Card Type', 'Request date');
 $query = db_select('card_register', 'cr');
  $query->fields('cr');
       $query->condition('approved', '0', '=');

    //$query->condition('card_create_date', array($start_date, $end_date), 'BETWEEN');


$query = $query->extend('TableSort')->extend('PagerDefault')->limit(20);
  $result = $query->execute();
   $rows = array();
    $i = 1;

                while($data = $result->fetchAssoc()){
                //  echo "<pre>";
                // print_r($data);
                // $request_department = $data['created']
                 $district = $data['district'];

                  $dist = explode(',', $district);
     // $dist_list = _get_location('village',$data['state'],$data['district'],$data['tehsil']);
                $dist_list = _get_location('district',$data['state']);

            $dstr = array();
 foreach ($dist as $key => $value) {
 $dstr[] = $dist_list[$value];
  }
  $district_value = implode(',', $dstr);
  

                    $state_list = _get_location('state');
                    
                     $term = taxonomy_term_load($data['type_card_request']);
                    $cardname = $term->name;

               $State = $state_list[$data['state']];
                  // Fill the table rows
                    $rows[$data['id']] = array(
                    $i,
                    $State,  
                     $district_value,    
                    $data['authority_card_holder'],
                    $data['department_organisation_name'],
                    $data['official_address1'].', '.$data['official_address2'],
                    $data ['letter_no'],
                    $cardname,
                    format_date($data['created'],'custom','d/m/Y'),
                  //  $data['no_of_card_request'],
                    $data['approved'],    
                   
                );
                  $i++;
              

             

             

          
            foreach( $rows as $key => $value )
                {
                  if($value['6']=='1'){
                $form['approve_select'][$key]['#disabled'] = true;
                     }
                }
 

 
}
 $form['approve_select'] = array(
                '#type' => 'tableselect',   
                '#title' => 'My Selector',
                '#header' => $header,
                '#options' => $rows,
                '#empty' => t('No Data Found.'),
              );

   $form['approve'] = array(
                  '#type' => 'submit',
                  '#value' => t('Approve'),
                  '#submit' => array('approve_value'),
                  '#validate' => array('approve_value_validate'), 
                );
      $form['pager'] = array('#markup' => theme('pager'));      


return $form;



}

function approve_value($form, &$form_state){
    
 $count = array_sum($form_state['values']['approve_select']);
if($count != 0)
{
   $update_date =  strtotime(date("d-m-Y"));
   $options = array(
				'approved' => 1,
                'card_create_date' => $update_date,
				);


  foreach ($form_state['values']['approve_select'] as $key => $id) {
    if($id!='0'){
$query=db_update('card_register')
                  ->condition('id',$id,'=')
                  ->fields($options)
                  ->execute();
               drupal_set_message("Your Card approved.");  
     }

   }
}
else{
  form_set_error('',t('Please select atleast one option to Aprove Card'));
}
}

function approve_value_validate($form, &$form_state){

}

function card_reset(){
   if($_SESSION['date_from'] !=''){
              unset($_SESSION['date_from']);
            }
            if($_SESSION['date_to'] !=''){
              unset($_SESSION['date_to']);
            }

}



function card_created_record_pagecallback(){
    $module_path = drupal_get_path('module', 'card_register');
    
    $form = drupal_get_form('card_created_record_form');
    
    $output = "<p>This tool will attempt to import CSV data";
    $output .= drupal_render($form);
    
    return $output;
}


  function card_created_record_form() {
    $form['#attributes'] = array(
      'enctype' => 'multipart/form-data'
    );
  
    $form['csvfile'] = array( 
      '#title' => t('CSV File'),
      '#type'  => 'file',
      '#description' => ($max_size = parse_size(ini_get('upload_max_filesize'))) ? t('Due to server restrictions, the <strong>maximum upload file size is !max_size</strong>. Files that exceed this size will be disregarded.', array('!max_size' => format_size($max_size))) : '',    
    ) ;
    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Import Data'),
    ) ;
    $form['#validate'] = array(
      'card_created_record_validate_fileupload',
      'card_created_record_form_validate',
    ) ;
    return $form ;
  }


  function card_created_record_validate_fileupload(&$form, &$form_state) {
    $validators = array(
      'file_validate_extensions' => array( 'csv' ),
    );
    
    if ( $file = file_save_upload('csvfile', $validators, "public://", FILE_EXISTS_REPLACE) ) {
      $form_state['values']['csvupload'] = $file->destination;       
    }
    else {
      form_set_error('card_created_record', t('Unable to copy upload file to !dest', array('!dest' => $destination)));
    }      
  }


  function card_created_record_form_validate(&$form, &$form_state) {
    if ( isset( $form_state['values']['csvupload'] ) ) {
      if ( $handle = fopen($form_state['values']['csvupload'], 'r') ) {
        $line_count = 1 ;
        $first = TRUE ;
        if ( $line = fgetcsv($handle, 4096) ) {
  
          //drupal_set_message(''.count($line).''); 
            if(count($line) != 18){//14
              form_set_error('csvfile', t('This file has the incorrect number of columns. Expecting 14'));
            }
          
          
          
        }
        fclose($handle);
      }
      else {
        form_set_error('csvfile', t('Unable to read uploaded file !filepath', array('!filepath' => $form_state['values']['csvupload'])));
      }
    }
  }


  function card_created_record_form_submit(&$form, &$form_state) {

    $batch = array(
      'title' => t('Importing CSV ...'),
      'operations' => array(),
      'init_message' => t('Commencing'),
      'progress_message' => t('Processed @current out of @total.'),
      'error_message' => t('An error occurred during processing'),
      'finished' => 'card_created_record_import_finished',
    ) ;
    if ( isset( $form_state['values']['csvupload'] ) ) {
      if ( $handle = fopen($form_state['values']['csvupload'], 'r') ) {
        $batch['operations'][] = array('_card_created_record_remember_filename', array( $form_state['values']['csvupload'] ) ) ;
        $line_count = 1 ;
        $first = TRUE ;
        $line = fgetcsv($handle, 4096);
        while ( $line = fgetcsv($handle, 4096) ) {

//           echo "<pre>";
//           print_r($line);
            //drupal_set_message(''.$line[14].'');

             $options = array(
                    'card_register_id' => $line[0],
                    //'card_reg' => $line[1],
                    'state' => $line[1],
                    'district' => $line[2],
                    'authority_card_holder' => $line[3],
                    'designation' => $line[4],
                    'address1_requester' => $line[5],
                    'address2_requester' => $line[6],
                    'pin_code' => $line[7],
                    'card_type' => $line[8],
                    'letter_date' => $line[9],
                    'letterno' => $line[10],
                    'department_organisation_name' => $line[11],
                    'organisation_unit_no' => $line[12],
                    'adhar_no' => $line[13],
                    'csn_no' => trim($line[14]),
                    'date_card_creation' => $line[15],
                    'batch_no' => '',
                    );
                    
                    $query = db_insert('card_created_record')
                              ->fields($options)
                              ->execute();

          /**
           * we use base64_encode to ensure we don't overload the batch
           * processor by stuffing complex objects into it
           */
          $batch['operations'][] = array('_card_created_record_import_line', array(array_map('base64_encode', $line)));        
        }
        //die('ss');
        fclose($handle);
      } // we caught this in card_created_record_form_validate()
    } // we caught this in card_created_record_form_validate()
    batch_set($batch);
  }


  function card_created_record_import_finished($success, $results, $operations) {
    if ( !empty($results['failed_rows']) ) {
      $dir  = file_directory_path() . '/card_register/' ;
      if ( file_check_directory( $dir, FILE_CREATE_DIRECTORY ) ) {
        $csv_filename = 'failed_rows-'. basename($results['uploaded_filename']); // we validated extension on upload
        $csv_filepath = $dir .'/'. $csv_filename;
        $targs = array(
          '!csv_url' => l(check_plain($csv_filename), $csv_filepath),
          '%csv_filename' => $csv_filename,
          '%csv_filepath' => $csv_filepath,
        ) ;
        if ( $handle = fopen($csv_filepath, 'w+') ) {
          foreach( $results['failed_rows'] as $failed_row ) {
            fputcsv($handle, $failed_row);
          }
          fclose($handle);
          drupal_set_message(t('Some rows failed to import. You may download a CSV of these rows: !csv_url', $targs), 'error');
        }
        else {
          drupal_set_message(t('Some rows failed to import, but unable to write error CSV to %csv_filepath', $targs), 'error');
        }
      }
      else {
        drupal_set_message(t('Some rows failed to import, but unable to create directory for error CSV at %csv_directory', $targs), 'error');
      }
    }
    return t('The CSV import has completed.');
  }
  
  
  function _card_created_record_remember_filename($filename, &$context) {
    $context['results']['uploaded_filename'] = $filename;
  }

  function _card_created_record_import_line($line, $session_nid, &$context) {
      
    $context['results']['rows_imported']++;
    $line = $cleaned_line = array_map('base64_decode', $line);
    
    
    
      $context['message'] = t('Importing row !c', array( '!c' => $context['results']['rows_imported'] ));
    
      $context['message'] = t('Importing %title', array('%title' => $line[0]));
    
      drupal_set_message("Parsed line {$line[0]}");
  
     if ( $line[1] == 'ROW' && $line[2] == 'FAILS' ) {
        $context['results']['failed_rows'][] = $line ;
      }
}


function card_record_list_pagecallback(){

    $module_path = drupal_get_path('module', 'card_register');
    $form = drupal_get_form('card_record_list_form');
    $output = drupal_render($form);
    
    return $output;
}




function card_record_list_form($form, &$form_state){

   $state_list_data = _get_location('state'); 
   $state_selected = isset($form_state['values']['state']) ? $form_state['values']['state'] : $_SESSION['c_state'];
          

    $form['state'] = array(
        '#title' => 'State',
        '#type' => 'select',
        '#options' => $state_list_data,
        '#default_value' =>  $state_selected ,
        '#required' => TRUE,
        // '#ajax' => array(
        //     'callback' => 'ajax_callback_state',
        //     'wrapper' => 'wrapper_state',
            
        // ),
        
    );


   // $district_list = _get_location('district',$state_selected);
   //  $district_selected = isset($form_state['values']['district']) ? $form_state['values']['district'] : $_SESSION['c_district'];
   //  $form['district'] = array(
   //      '#title' => 'District',
   //      '#type' => 'select',
   //      '#options' => $district_list,
   //      '#default_value' => $district_selected,
   //      '#required' => TRUE,
   //      // '#multiple' => TRUE,
   //     //  '#size' => 10,
   //      '#prefix' => '<div id="wrapper_state">',
   //      '#suffix' => '</div>',
               
   //  );

     $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Submit'),
    ) ;




if(!empty($_SESSION['c_state'])){ 

    $header = array('S.N','State','District','Authority Name','Requested Department Name','Department Address','Card Type', 'Letter No.','letter Date','AAdhaar No', 'CSN No','Card Printing Date');
    
    $query = db_select('card_created_record', 'cr');
    $query->fields('cr');
    $query->condition('state', $_SESSION['c_state'], '=');
   // $query->condition('district', $_SESSION['c_district'], '=');

    $query = $query->extend('TableSort')->extend('PagerDefault')->limit(20);
    $result = $query->execute();
    $rows = array();
    $i = 1;

                while($data = $result->fetchAssoc()){

                  $district_code_length = strlen($data['district']);
                  if($district_code_length =='1'){
                    $district_code = '0'.$data['district'];
                  }else{
                    $district_code = $data['district'];                   

                  }
                  $districtv = _get_location('district',$data['state']);
                 
                  $card_name = taxonomy_term_load($data['card_type']);//
            
                  //print_r($termss);
            
                $rows[] = array(
                    $i,
                    $state_list_data[$data['state']],
                    $districtv[$district_code], 
                    $data['authority_card_holder'],
                    $data['department_organisation_name'],
                    $data['address1_requester'].', '.$data['address2_requester'],
                    isset($card_name->name) ? $card_name->name : '',
                    $data['letterno'],
                    format_date(strtotime($data['letter_date']),'custom','d-m-Y'),
                    $data['adhar_no'],
                    $data['csn_no'],
                    format_date(strtotime($data['date_card_creation']),'custom','d-m-Y'),
                );
                  $i++;

}
  $form['table'] = array(
                            '#theme' => 'table',
                            '#header' => $header,
                            '#rows' => $rows,
                            '#empty' => t('Table has no row!'),                            
                          );
  $form['pager'] = array('#markup' => theme('pager'));

}

      return $form;

}

function card_record_list_form_submit($form, &$form_state){


$state_val = $form_state['values']['state'];
$district_val = $form_state['values']['district'];
$distr_f_chr = substr($district_val,0,-1);
if($distr_f_chr == 0){
   $district_code = trim($district_val,'0');
}else{
   $district_code = $district_val;
}

 if($form_state['values']['state'] != ''){
           $_SESSION['c_state'] =  $form_state['values']['state'];

       }
       if ($form_state['values']['district'] != '') {
            $_SESSION['c_district'] =  $district_code;
           
       }

}